<%- include('../layouts/users/header', { title: 'Ellora Store', path: '/profile',userId:userId,wishlistData:wishlistData,cartData: cartData }) %>

<style>
    .product-media img {
        width: 50px; 
        height: auto; 
    }
    
    .order {
        margin-bottom: 20px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }
    
    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .order-products {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 15px;
    }
    
    .product {
        display: flex;
        align-items: center;
    }
    
    .product-title {
        margin-left: 15px;
        font-size: 14px; 
        text-align: left;
    }
    
    .order-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 15px;
    }
    
    .order {
        padding: 15px;
        border: 1px solid #ddd;
        margin-bottom: 20px;
    }
    
    .order-products .product {
        margin-bottom: 10px;
    }
    
    .product-media {
        margin-bottom: 10px;
    }
    
    .order-details {
        padding: 15px;
    }
    
    .order-details .order-date,
    .order-details .order-status,
    .order-details .order-payment-method,
    .order-details .order-total {
        margin-bottom: 10px;
    }
    
    .order-view-details {
        margin-top: 20px;
    }
    
    .product-image {
        width: 100px;
        height: auto;
    }
    
    .wrapper {
        display: flex;
        align-items: center;
    }

    .coupon_card {
        width: 100%; 
        max-width: 300px; 
        padding: 20px;
        border-radius: 20px;
        background: rgb(253, 196, 89);
        color: #fff;
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        overflow: hidden; 
    }

    .content {
        z-index: 10;
    }

    .cross-bg {
        height: 100%;
        width: 100%;
        position: absolute;
        background-color: #b07727;
        left: 0px;
        top: 0px;
        opacity: 0.4;
        clip-path: polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
        z-index: 1;
    }

    .logo {
        margin-bottom: 20px;
    }

    .off {
        line-height: 1;
        font-size: 40px;
    }

    .plus {
        font-size: 18px;
    }

    .code {
        padding: 10px;
        background-color: #fff;
        color: rgb(255, 111, 0);
        font-size: 16px;
    }
</style>

<main class="main">
    <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
        <div class="container">
            <h1 class="page-title">My Account<span>Shop</span></h1>
        </div><!-- End .container -->
    </div><!-- End .page-header -->
    
    <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">My Account</li>
                <li class="breadcrumb-item" aria-current="page" style="display: none;">My Account</li>
                <li class="breadcrumb-item active" aria-current="page" style="display: none;">Orders</li>
            </ol>
        </div><!-- End .container -->
    </nav><!-- End .breadcrumb-nav -->

    <div class="page-content">
        <div class="dashboard">
            <div class="container">
                <div class="row">
                    <aside class="col-md-4 col-lg-3">
                        <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard" role="tab" aria-controls="tab-dashboard" aria-selected="true">Dashboard</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" onclick="fetchOrderList(1)" id="tab-orders-link" data-toggle="tab" href="#tab-orders" role="tab" aria-controls="tab-orders" aria-selected="true">Orders</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-downloads-link" data-toggle="tab" href="#tab-downloads" role="tab" aria-controls="tab-downloads" aria-selected="false">Downloads</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-coupon-link" data-toggle="tab" href="#tab-coupon" role="tab" aria-controls="tab-coupon" aria-selected="false">Available coupons</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/logout">Sign Out</a>
                            </li>
                        </ul>
                    </aside><!-- End .col-lg-3 -->

                    <div class="col-md-8 col-lg-9">
                        <div class="tab-content">
                            <!-- Dashboard Tab -->
                            <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
                                <p>
                                    Hello <span class="font-weight-normal text-dark"><%= userData.name %></span> 
                                    (not <span class="font-weight-normal text-dark">User</span>? <a href="#">Log out</a>) 
                                    <br>
                                    From your account dashboard you can view your <a href="#tab-orders" class="tab-trigger-link link-underline">recent orders</a>, 
                                    manage your <a href="#tab-address" class="tab-trigger-link">shipping and billing addresses</a>, 
                                    and <a href="#tab-account" class="tab-trigger-link">edit your password and account details</a>.
                                </p>
                            </div><!-- End .tab-pane -->

                            <!-- Orders Tab -->
                            <div class="tab-pane fade" id="tab-orders" role="tabpanel" aria-labelledby="tab-orders-link">
                                <% if(orderData && orderData.length > 0) { %>
                                    <div id="orderListContainer">
                                        <% orderData.forEach((order) => { %>
                                            <div class="order">
                                                <div class="row">
                                                    <!-- Left Column -->
                                                    <div class="col-md-4">
                                                        <div class="order-products">
                                                            <% order.products.forEach((product) => { %>
                                                                <div class="product">
                                                                    <figure class="product-media">
                                                                        <a href="#">
                                                                            <img src="<%= product.productId.image[0].url %>" alt="Product image" class="product-image">
                                                                        </a>
                                                                    </figure>
                                                                    <h3 class="product-title">
                                                                        <a href="#"><%= product.productId.name %></a>
                                                                    </h3>
                                                                </div>
                                                            <% }) %>
                                                        </div>
                                                    </div>
                                                    <!-- Right Column -->
                                                    <div class="col-md-4">
                                                        <div class="order-details">
                                                            <div class="order-date">
                                                                <strong>Order Date:</strong> <%= order.date.toDateString() %>
                                                            </div>
                                                            <div class="order-status">
                                                                <strong>Payment Status:</strong> <%= order.status %>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="order-details">
                                                            <div class="order-payment-method">
                                                                <strong>Payment Method:</strong> <%= order.payment %>
                                                            </div>
                                                            <div class="order-total">
                                                                <strong>Total Amount:</strong> Rs.<%= order.total_amount %>
                                                            </div>
                                                            <div class="order-view-details">
                                                                <a href="#" onclick="showDetails('<%= order._id %>')" class="btn btn-outline-primary-2">View Details</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr>
                                        <% }) %>
                                    </div>

                                    <div id="paginationId" class="pagination-area mt-30 mb-50">
                                        <nav aria-label="Page navigation example">
                                            <ul class="pagination justify-content-start" id="orderPagination">
                                                <% if (currentOrderPage > 1) { %>
                                                    <li class="page-item">
                                                        <a class="page-link page-link-prev" href="#" onclick="fetchOrderList('<%= currentOrderPage - 1 %>')" aria-label="Previous">
                                                            <span aria-hidden="true"><i class="material-icons md-chevron_left"></i></span>Prev
                                                        </a>
                                                    </li>
                                                <% } else { %>
                                                    <li class="page-item disabled">
                                                        <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" aria-disabled="true">
                                                            <span aria-hidden="true"><i class="material-icons md-chevron_left"></i></span>Prev
                                                        </a>
                                                    </li>
                                                <% } %>
                                
                                                <% if (currentOrderPage > 3) { %>
                                                    <li class="page-item"><a class="page-link" href="#" onclick="fetchOrderList(1)">01</a></li>
                                                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                                                <% } %>
                                
                                                <% for (let j = Math.max(1, currentOrderPage - 2); j <= Math.min(totalOrderPages, currentOrderPage + 2); j++) { %>
                                                    <li class="page-item <%= j === currentOrderPage ? 'active' : '' %>">
                                                        <a class="page-link" href="#" onclick="fetchOrderList('<%= j %>')"><%= j < 10 ? '0' + j : j %></a>
                                                    </li>
                                                <% } %>
                                
                                                <% if (currentOrderPage < totalOrderPages - 2) { %>
                                                    <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                                                    <li class="page-item"><a class="page-link" href="#" onclick="fetchOrderList('<%= totalOrderPages %>')"><%= totalOrderPages < 10 ? '0' + totalOrderPages : totalOrderPages %></a></li>
                                                <% } %>
                                
                                                <% if (currentOrderPage < totalOrderPages) { %>
                                                    <li class="page-item">
                                                        <a class="page-link page-link-next" href="#" onclick="fetchOrderList('<%= currentOrderPage + 1 %>')" aria-label="Next">
                                                            Next<span aria-hidden="true"><i class="icon-long-arrow-right"></i></span>
                                                        </a>
                                                    </li>
                                                <% } else { %>
                                                    <li class="page-item disabled">
                                                        <a class="page-link page-link-next" href="#" aria-label="Next" tabindex="-1" aria-disabled="true">
                                                            Next<span aria-hidden="true"><i class="icon-long-arrow-right"></i></span>
                                                        </a>
                                                    </li>
                                                <% } %>
                                            </ul>
                                        </nav>
                                    </div>
                                <% } else { %>
                                    <p>No orders have been made yet.</p>
                                    <a href="/products" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>
                                <% } %>
                            </div><!-- End .tab-pane -->
                            
                            <!-- Downloads Tab -->
                            <div class="tab-pane fade" id="tab-downloads" role="tabpanel" aria-labelledby="tab-downloads-link">
                                <p>No downloads available yet.</p>
                                <a href="/products" class="btn btn-outline-primary-2"><span>GO SHOP</span><i class="icon-long-arrow-right"></i></a>
                            </div><!-- End .tab-pane -->

                            <!-- Address Tab -->
                            <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
                                <p>The following addresses will be used on the checkout page by default.</p>
                                <a href="" id="showAddAddress" aria-controls="addAddress" aria-selected="false">Add address <i class="icon-edit"></i></a></p>
                                
                                <% if(userData && userData.addresses.length > 0) { %>
                                    <% userData.addresses.forEach((value) => { %>
                                        <div class="row">
                                            <div class="col-lg-6">
                                                <div id="cardId<%= value._id %>" class="card card-dashboard">
                                                    <div class="card-body">
                                                        <h3 class="card-title">Billing Address</h3>
                                                        <p>
                                                            <%= value.name %><br>
                                                            <%= value.streetAddress %><br>
                                                            <%= value.city %><br>
                                                            <%= value.state %><br>
                                                            <%= value.country %><br>
                                                            <%= value.pincode %><br>
                                                            <%= value.landMark %><br>
                                                            <%= value.mobile %><br>
                                                            <%= value.email %><br>
                                                            <button onclick="showEditAddress('<%= value._id %>')" id="showeditAddress" aria-controls="editAddress" aria-selected="false">Edit <i class="icon-edit"></i></button>
                                                            <button onclick="deleteAddress('<%= value._id %>')">Delete</button>
                                                        </p>
                                                    </div><!-- End .card-body -->
                                                </div><!-- End .card-dashboard -->
                                            </div><!-- End .col-lg-6 -->
                                        </div><!-- End .row -->
                                        
                                        <div class="row" id="editAddress<%= value._id %>" style="display: none;">
                                            <form class="col-lg-12" action="/editAddress" method="post">
                                                <div class="col-lg-12 d-flex justify-content-between align-items-center mb-2">
                                                    <h2 class="checkout-title mb-0">Billing Details</h2>
                                                    <a onclick="toAddressList('<%= value._id %>')" href="#tab-address" id="toAddressList" class="btn btn-link">Back</a>
                                                </div>

                                                <input type="hidden" name="_id" value="<%= value._id %>">
                                                
                                                <label>User Name</label>
                                                <input name="name" type="text" class="form-control" value="<%= value.name %>">
                                                <span class="error-message" style="color: red;"></span>

                                                <label>Country</label>
                                                <input name="country" type="text" class="form-control" value="<%= value.country %>" required>
                                                <span class="error-message" style="color: red;"></span>

                                                <label>Street address</label>
                                                <input name="streetName" type="text" class="form-control" placeholder="House number and Street name" value="<%= value.streetAddress %>" required>
                                                <span class="error-message" style="color: red;"></span>
                                                
                                                <input name="landMark" type="text" class="form-control" placeholder="LandMark" value="<%= value.landMark %>" required>
                                                <span class="error-message" style="color: red;"></span>

                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <label>Town / City</label>
                                                        <input name="town" type="text" class="form-control" value="<%= value.city %>" required>
                                                        <span class="error-message" style="color: red;"></span>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <label>State / County</label>
                                                        <input name="state" type="text" class="form-control" value="<%= value.state %>" required>
                                                        <span class="error-message" style="color: red;"></span>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <label>Postcode / ZIP</label>
                                                        <input name="pin" type="text" class="form-control" value="<%= value.pincode %>" required>
                                                        <span class="error-message" style="color: red;"></span>
                                                    </div>

                                                    <div class="col-sm-6">
                                                        <label>Phone</label>
                                                        <input name="phone" type="tel" class="form-control" value="<%= value.mobile %>" required>
                                                        <span class="error-message" style="color: red;"></span>
                                                    </div>
                                                </div>
                                                
                                                <label>Email</label>
                                                <input name="email" type="email" class="form-control" value="<%= value.email %>" required>
                                                <span class="error-message" style="color: red;"></span>
        
                                                <button type="submit" class="btn btn-outline-primary-2">
                                                    <span>Edit address</span>
                                                    <i class="icon-long-arrow-right"></i>
                                                </button>
                                            </form>
                                        </div>
                                    <% }) %>
                                <% } else { %>
                                    <div class="col-lg-6">
                                        <div class="card card-dashboard">
                                            <div class="card-body">
                                                <h3 class="card-title">Billing Address</h3>
                                                <p>You have not set up this type of address yet.</p>
                                            </div><!-- End .card-body -->
                                        </div><!-- End .card-dashboard -->
                                    </div><!-- End .col-lg-6 -->
                                <% } %>
                                
                                <!-- Add Address Form -->
                                <div class="row" id="addAddress" style="display: none;">
                                    <form class="col-lg-12" action="/addAddress" method="post">
                                        <div class="col-lg-12 d-flex justify-content-between align-items-center mb-2">
                                            <h2 class="checkout-title">Billing Details</h2>
                                            <a onclick="toAddressLists()" href="#tab-address" id="toAddressList" class="btn btn-link">back</a>
                                        </div>

                                        <label>User Name</label>
                                        <input name="name" type="text" class="form-control">
                                        <span class="error-message" style="color: red;"></span>
                                
                                        <label class="mt-2">Country</label>
                                        <input name="country" type="text" class="form-control" required>
                                        <span class="error-message" style="color: red;"></span>
                                
                                        <label>Street address</label>
                                        <input name="streetName" type="text" class="form-control" placeholder="House number and Street name" required>
                                        <span class="error-message" style="color: red;"></span>
                                        
                                        <input name="landMark" type="text" class="form-control" placeholder="LandMark" required>
                                        <span class="error-message" style="color: red;"></span>
                                
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <label>Town / City</label>
                                                <input name="town" type="text" class="form-control" required>
                                                <span class="error-message" style="color: red;"></span>
                                            </div>
                                
                                            <div class="col-sm-6">
                                                <label>State / County</label>
                                                <input name="state" type="text" class="form-control" required>
                                                <span class="error-message" style="color: red;"></span>
                                            </div>
                                        </div>
                                
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <label>Postcode / ZIP</label>
                                                <input name="pin" type="text" class="form-control" required>
                                                <span class="error-message" style="color: red;"></span>
                                            </div>
                                
                                            <div class="col-sm-6">
                                                <label>Phone</label>
                                                <input name="phone" type="tel" class="form-control" required>
                                                <span class="error-message" style="color: red;"></span>
                                            </div>
                                        </div>
                                        
                                        <label>Email</label>
                                        <input name="email" type="email" class="form-control" required>
                                        <span class="error-message" style="color: red;"></span>
                                
                                        <button type="submit" class="btn btn-outline-primary-2">
                                            <span>Add address</span>
                                            <i class="icon-long-arrow-right"></i>
                                        </button>
                                    </form>
                                </div>
                            </div><!-- End .tab-pane -->

                            <!-- Account Details Tab -->
                            <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link">
                                <!-- Account Details Section -->
                                <div id="accountDetails">
                                    <div class="card mb-3">
                                        <div class="card-body">
                                            <h5 class="card-title">Account Details</h5>
                                            <p class="card-text">
                                                <strong>Name:</strong> <%= userData.name %><br>
                                                <strong>Email:</strong> <%= userData.email %><br>
                                                <strong>Mobile:</strong> <%= userData.mobile %><br>
                                            </p>
                                            <button class="btn btn-primary" onclick="showEditDetails()" id="showeditDetails">
                                                Edit <i class="icon-edit"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <% if(walletData) { %>
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">Wallet Amount</h5>
                                            <h4>Rs.<%= walletData.walletAmount.toFixed(2) %></h4>
                                            <button onclick="showWalletHistory()" class="btn btn-outline-primary">Wallet History</button>
                                        </div>
                                    </div>
                                    <% } %>
                                </div>
                                
                                <!-- Wallet History Section -->
                                <div id="walletHistory" style="display: none;">
                                    <div class="col-lg-12 text-right">
                                        <a onclick="toaccountDetails()" href="#tab-account">back</a>
                                    </div>
                                    <div class="table-responsive">
                                        <table id="tableId" class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Description</th>
                                                    <th scope="col">Amount</th>
                                                    <th scope="col">Date</th>
                                                    <th scope="col">Status</th>
                                                </tr>
                                            </thead>
                                            <tbody id="walletHistoryBody">
                                                <!-- Wallet history rows will be dynamically inserted here -->
                                            </tbody>
                                        </table>
                                        <div id="paginationId" class="pagination-area mt-30 mb-50">
                                            <nav aria-label="Page navigation example">
                                                <ul class="pagination justify-content-center" id="walletPagination">
                                                    <!-- Pagination links will be dynamically inserted here -->
                                                </ul>
                                            </nav>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Edit Details Section -->
                                <div id="editDetails" style="display: none;">
                                    <div class="col-lg-12 text-right">
                                        <a onclick="toaccountDetail()" href="#tab-account">back</a>
                                    </div>
                                    <form action="/profile" method="post">
                                        <label>Name</label>
                                        <input type="text" class="form-control" name="updatedName" value="<%= userData.name %>" required>
                                        <small class="form-text"></small>
                                        
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <label>Email address</label>
                                                <input type="email" class="form-control" name="userEmail" value="<%= userData.email %>" required>
                                            </div>
                                            <div class="col-sm-6">
                                                <label>Mobile</label>
                                                <input type="tel" class="form-control" name="updatedMobile" value="<%= userData.mobile %>" required>
                                            </div>
                                        </div>

                                        <h2 class="checkout-title" style="margin-top: 0rem; margin-bottom: 1rem;">Password Change</h2>
                                        <label>Current password (leave blank to leave unchanged)</label>
                                        <input type="password" class="form-control" name="currentPassword">

                                        <label>New password (leave blank to leave unchanged)</label>
                                        <input type="password" class="form-control" name="newPassword">

                                        <label>Confirm new password</label>
                                        <input type="password" class="form-control mb-2" name="confirmPassword">

                                        <button onclick="editDetails()" type="submit" class="btn btn-outline-primary-2">
                                            <span>SAVE CHANGES</span>
                                            <i class="icon-long-arrow-right"></i>
                                        </button>
                                    </form>
                                </div>
                            </div><!-- End .tab-pane -->

                            <!-- Available Coupon Tab -->
                            <div class="tab-pane fade" id="tab-coupon" role="tabpanel" aria-labelledby="tab-coupon-link">
                                <div class="row wrapper d-flex justify-content-around">
                                    <% if(couponData && couponData.length > 0) { %>
                                        <% couponData.forEach(coupon => { %>
                                            <div class="col-lg-6 coupon_card card mb-5">
                                                <div class="cross-bg"></div>
                                                <div class="content">
                                                    <div class="text-center text-uppercase text-white off">
                                                        <h1 class="mt-0"><%= coupon.offerPrice %></h1>
                                                    </div>
                                                    <div class="text-center text-white">
                                                        <span class="plus"><%= coupon.name %></span>
                                                    </div>
                                                    <div class="text-center text-uppercase text-white">
                                                        <h3 class="m-0"><%= coupon.expiryDate.toLocaleDateString() %></h3>
                                                    </div>
                                                    <div class="code text-center mt-4">
                                                        <span>Use code: <%= coupon.couponCode %></span>
                                                        <% const usedUser = coupon.usedUsers.find(user => user.userId.toString() === userId) %>
                                                        <% if (usedUser && Boolean(usedUser.status) && coupon.expiryDate < new Date()) { %>
                                                            <button class="copy-btn" data-coupon-code="<%= coupon.couponCode %>" disabled>Copy Code</button>
                                                        <% } else { %>
                                                            <button class="copy-btn" data-coupon-code="<%= coupon.couponCode %>">Copy Code</button>
                                                        <% } %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% }) %>
                                    <% } else { %>
                                </div>
                                <p>No coupon exist</p>
                                <a href="/products" class="btn btn-outline-primary-2"><span>GO SHOP </span><i class="icon-long-arrow-right"></i></a>
                                <% } %>
                            </div>
                        </div><!-- End tab-content -->
                    </div><!-- End .col-lg-9 -->
                </div><!-- End .row -->
            </div><!-- End .container -->
        </div><!-- End .dashboard -->
    </div><!-- End .page-content -->
</main><!-- End .main -->

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- External Dependencies -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- UI Toggle Functions -->
<script>
    // Show/Hide Address Management Functions
    $(document).ready(function() {
        $('#showAddAddress').click(function(e) {
            e.preventDefault(); 
            $('.card-dashboard').hide(); 
            $('#addAddress').show();
        });
    });

    function showEditAddress(id) {
        $('.col-lg-6').hide();
        $(`#editAddress${id}`).show();
    }

    function toAddressList(id) {
        $(`#editAddress${id}`).hide();
        $('.col-lg-6').show();
    }

    function toAddressLists() {
        $('#addAddress').hide();
        $('.col-lg-6').show();
    }

    // Account Details Toggle Functions
    function showEditDetails() {
        $('#accountDetails').hide();
        $('#editDetails').show();
    }

    function toaccountDetail() {
        $('#editDetails').hide();
        $('#accountDetails').show();
    }

    // Wallet History Toggle Functions
    function showWalletHistory(page = 1) {
        $('#accountDetails').hide();
        $('#walletHistory').show();
        fetchWalletHistory(page);
    }

    function toaccountDetails() {
        $('#walletHistory').hide();
        $('#accountDetails').show();
    }

    // Order Details Navigation
    function showDetails(orderId) {
        window.location = `/orderHistory?orderId=${orderId}`;
    }
</script>

<!-- Form Validation -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Validation for Add Address form
        const addAddressForm = document.querySelector('form[action="/addAddress"]');
        
        // Validation for Edit Address form(s)
        const editAddressForms = document.querySelectorAll('form[action="/editAddress"]');
        
        // Add validation to both form types
        if (addAddressForm) setupFormValidation(addAddressForm);
        
        if (editAddressForms.length > 0) {
            editAddressForms.forEach(form => {
                setupFormValidation(form);
            });
        }
        
        // Function to setup validation for a form
        function setupFormValidation(form) {
            const nameField = form.querySelector('input[name="name"]');
            const countryField = form.querySelector('input[name="country"]');
            const streetField = form.querySelector('input[name="streetName"]');
            const landmarkField = form.querySelector('input[name="landMark"]');
            const townField = form.querySelector('input[name="town"]');
            const stateField = form.querySelector('input[name="state"]');
            const pinField = form.querySelector('input[name="pin"]');
            const phoneField = form.querySelector('input[name="phone"]');
            const emailField = form.querySelector('input[name="email"]');
            
            // Function to show error message
            function showError(field, message) {
                // Check if error element already exists
                let errorElement = field.nextElementSibling;
                
                if (!errorElement || !errorElement.classList.contains('error-message')) {
                    // Create new error element if it doesn't exist
                    errorElement = document.createElement('span');
                    errorElement.className = 'error-message';
                    errorElement.style.color = 'red';
                    field.parentNode.insertBefore(errorElement, field.nextSibling);
                }
                
                errorElement.textContent = message;
                return false;
            }
            
            // Function to clear error message
            function clearError(field) {
                const errorElement = field.nextElementSibling;
                if (errorElement && errorElement.classList.contains('error-message')) {
                    errorElement.textContent = '';
                }
            }
            
            // Set up validation for each field
            setupFieldValidation(nameField, 
                value => value.trim() === '' ? 'Name is required' : 
                       value.trim().length < 3 ? 'Name must be at least 3 characters' : null);
            
            setupFieldValidation(countryField, 
                value => value.trim() === '' ? 'Country is required' : null);
            
            setupFieldValidation(streetField, 
                value => value.trim() === '' ? 'Street address is required' : 
                       value.trim().length < 5 ? 'Please enter a valid street address' : null);
            
            setupFieldValidation(landmarkField, 
                value => value.trim() === '' ? 'Landmark is required' : null);
            
            setupFieldValidation(townField, 
                value => value.trim() === '' ? 'Town/City is required' : null);
            
            setupFieldValidation(stateField, 
                value => value.trim() === '' ? 'State is required' : null);
            
            setupFieldValidation(pinField, 
                value => {
                    const pinRegex = /^\d{6}$/;
                    return value.trim() === '' ? 'PIN code is required' : 
                           !pinRegex.test(value.trim()) ? 'Please enter a valid 6-digit PIN code' : null;
                });
            
            setupFieldValidation(phoneField, 
                value => {
                    const phoneRegex = /^[6-9]\d{9}$/;
                    return value.trim() === '' ? 'Phone number is required' : 
                           !phoneRegex.test(value.trim()) ? 'Please enter a valid 10-digit mobile number' : null;
                });
            
            setupFieldValidation(emailField, 
                value => {
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    return value.trim() === '' ? 'Email is required' : 
                           !emailRegex.test(value.trim()) ? 'Please enter a valid email address' : null;
                });
            
            // Helper function to set up field validation
            function setupFieldValidation(field, validationFn) {
                if (!field) return;
                
                field.addEventListener('blur', function() {
                    const error = validationFn(this.value);
                    if (error) {
                        showError(this, error);
                    } else {
                        clearError(this);
                    }
                });
            }
            
            // Form submission validation
            form.addEventListener('submit', function(event) {
                let isValid = true;
                
                // Validate all fields
                const fieldsToValidate = [
                    { field: nameField, validationFn: value => value.trim() === '' ? 'Name is required' : 
                                                           value.trim().length < 3 ? 'Name must be at least 3 characters' : null },
                    { field: countryField, validationFn: value => value.trim() === '' ? 'Country is required' : null },
                    { field: streetField, validationFn: value => value.trim() === '' ? 'Street address is required' : 
                                                             value.trim().length < 5 ? 'Please enter a valid street address' : null },
                    { field: landmarkField, validationFn: value => value.trim() === '' ? 'Landmark is required' : null },
                    { field: townField, validationFn: value => value.trim() === '' ? 'Town/City is required' : null },
                    { field: stateField, validationFn: value => value.trim() === '' ? 'State is required' : null },
                    { field: pinField, validationFn: value => {
                        const pinRegex = /^\d{6}$/;
                        return value.trim() === '' ? 'PIN code is required' : 
                               !pinRegex.test(value.trim()) ? 'Please enter a valid 6-digit PIN code' : null;
                    }},
                    { field: phoneField, validationFn: value => {
                        const phoneRegex = /^[6-9]\d{9}$/;
                        return value.trim() === '' ? 'Phone number is required' : 
                               !phoneRegex.test(value.trim()) ? 'Please enter a valid 10-digit mobile number' : null;
                    }},
                    { field: emailField, validationFn: value => {
                        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                        return value.trim() === '' ? 'Email is required' : 
                               !emailRegex.test(value.trim()) ? 'Please enter a valid email address' : null;
                    }}
                ];
                
                fieldsToValidate.forEach(({ field, validationFn }) => {
                    if (field) {
                        const error = validationFn(field.value);
                        if (error) {
                            isValid = showError(field, error) && isValid;
                        }
                    }
                });
                
                if (!isValid) {
                    event.preventDefault();
                }
            });
        }
    });
</script>

<!-- Order Management -->
<script>
    function fetchOrderList(orderPage) {
        $.ajax({
            url: `/orders?orderPage=${orderPage}`,
            method: 'GET',
            success: function (response) {
                const orderListContainer = $('#orderListContainer');
                orderListContainer.empty(); // Clear existing content

                // Render orders
                response.orderData.forEach(order => {
                    const productsHTML = order.products.map(product => `
                        <div class="product">
                            <figure class="product-media">
                                <a href="#">
                                    <img src="${product.productId.image[0].url}" alt="Product image" class="product-image">
                                </a>
                            </figure>
                            <h3 class="product-title">
                                <a href="#">${product.productId.name}</a>
                            </h3>
                        </div>
                    `).join('');

                    const orderHTML = `
                        <div class="order">
                            <div class="row">
                                <!-- Left Column -->
                                <div class="col-md-4">
                                    <div class="order-products">
                                        ${productsHTML}
                                    </div>
                                </div>
                                <!-- Right Column -->
                                <div class="col-md-4">
                                    <div class="order-details">
                                        <div class="order-date">
                                            <strong>Order Date:</strong> ${new Date(order.date).toDateString()}
                                        </div>
                                        <div class="order-status">
                                            <strong>Payment Status:</strong> ${order.status}
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="order-details">
                                        <div class="order-payment-method">
                                            <strong>Payment Method:</strong> ${order.payment}
                                        </div>
                                        <div class="order-total">
                                            <strong>Total Amount:</strong> Rs.${order.total_amount}
                                        </div>
                                        <div class="order-view-details">
                                            <a href="#" onclick="showDetails('${order._id}')" class="btn btn-outline-primary-2">View Details</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr>
                    `;
                    orderListContainer.append(orderHTML);
                });

                // Update pagination
                updatePagination(
                    $('#orderPagination'),
                    response.currentPage,
                    response.totalOrderPages,
                    'fetchOrderList'
                );
            }
        });
    }

    // Cancel an order
    function cancelOrder(tag, productId, orderId) {
        const confirmed = confirm("Are you sure you want to cancel this order?");
        if (confirmed) {
            tag.innerText = 'Cancelled';
            tag.disabled = true;
            fetch(`/cancelOrder?productId=${productId}&orderId=${orderId}`);
        }
    }

    // Return a product
    function returnProduct(productId, orderId) {
        Swal.fire({
            title: 'Reason for Return',
            input: 'textarea',
            inputLabel: 'Please provide a reason for return',
            inputPlaceholder: 'Enter your reason here...',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Submit',
            showLoaderOnConfirm: true,
            preConfirm: (reason) => {
                return fetch('/returnProduct', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({productId, orderId, reason })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(response.statusText);
                    }
                    return response.json();
                })
                .catch(error => {
                    Swal.showValidationMessage(`Request failed: ${error}`);
                });
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                if (result.value && !result.value.error) {
                    Swal.fire({
                        title: 'Return Request Submitted!',
                        text: 'Your return request has been submitted successfully.',
                        icon: 'success'
                    });
                } else {
                    Swal.fire({
                        title: 'Return Request Failed!',
                        text: result.value.error || 'An error occurred while processing your request.',
                        icon: 'error'
                    });
                }
            }
        });
    }
</script>

<!-- Wallet Management -->
<script>
    function fetchWalletHistory(page) {
        $.ajax({
            url: `/walletHistory?page=${page}`,
            method: 'GET',
            success: function (response) {
                const walletHistoryBody = $('#walletHistoryBody');
                walletHistoryBody.empty();

                // Render wallet history
                response.paginatedWalletHistory.forEach(wallet => {
                    walletHistoryBody.append(`
                        <tr>
                            <td>${wallet.description}</td>
                            <td>${wallet.amount}</td>
                            <td>${new Date(wallet.date).toLocaleDateString()}</td>
                            <td>${wallet.status}</td>
                        </tr>
                    `);
                });

                // Update pagination
                updatePagination(
                    $('#walletPagination'),
                    response.currentWalletPage,
                    response.totalWalletPages,
                    'fetchWalletHistory'
                );
            }
        });
    }
</script>

<!-- Address Management -->
<script>
    // Edit address
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form[action="/editAddress"]');
        
        if (form) {
            form.addEventListener('submit', async function(event) {
                event.preventDefault(); 
        
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
        
                try {
                    const response = await axios.put('/editAddress', data);
        
                    if (response.data.success === true) {
                        Swal.fire({
                            position: "center",
                            title: "Success!",
                            text: "Address edited successfully",
                            icon: "success",
                            buttons: false
                        });
                    } else {
                        console.error('Error:', response.data.error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to edit address.',
                            icon: 'error'
                        });
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to edit address.',
                        icon: 'error'
                    });
                }
            });
        }
    });

    // Delete address
    async function deleteAddress(addressId) {
        try {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            });
    
            if (result.isConfirmed) {
                const response = await axios.delete('/deleteAddress', { data: {addressId} });
                if (response.data.success) {
                    const deletedElement = document.getElementById(`cardId${addressId}`).parentNode;
                    deletedElement.parentNode.removeChild(deletedElement);
                  
                    Swal.fire('Deleted!', 'Your address has been deleted.', 'success');
                } else {
                    Swal.fire('Error!', 'Failed to delete address.', 'error');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire('Error!', 'Failed to delete address.', 'error');
        }
    }
</script>

<!-- Coupon Management -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const copyButtons = document.querySelectorAll('.copy-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', function () {
                const couponCode = button.dataset.couponCode;

                const tempInput = document.createElement('input');
                tempInput.setAttribute('value', couponCode);
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand('copy');
                document.body.removeChild(tempInput);
                alert('Coupon code copied to clipboard: ' + couponCode);
            });
        });
    });
</script>

<!-- Utility Functions -->
<script>
    // Helper function for pagination rendering
    function updatePagination(container, currentPage, totalPages, callbackFn) {
        container.empty();

        // Previous button
        if (currentPage > 1) {
            container.append(`
                <li class="page-item">
                    <a class="page-link page-link-prev" href="#" onclick="${callbackFn}(${currentPage - 1})" aria-label="Previous">
                        <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                    </a>
                </li>
            `);
        } else {
            container.append(`
                <li class="page-item disabled">
                    <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" aria-disabled="true">
                        <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                    </a>
                </li>
            `);
        }

        // First page + ellipsis
        if (currentPage > 3) {
            container.append(`
                <li class="page-item"><a class="page-link" href="#" onclick="${callbackFn}(1)">01</a></li>
                <li class="page-item"><a class="page-link dot" href="#">...</a></li>
            `);
        }

        // Page numbers
        for (let j = Math.max(1, currentPage - 2); j <= Math.min(totalPages, currentPage + 2); j++) {
            container.append(`
                <li class="page-item ${j === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="${callbackFn}(${j})">${j < 10 ? '0' + j : j}</a>
                </li>
            `);
        }

        // Last page + ellipsis
        if (currentPage < totalPages - 2) {
            container.append(`
                <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                <li class="page-item"><a class="page-link" href="#" onclick="${callbackFn}(${totalPages})">${totalPages < 10 ? '0' + totalPages : totalPages}</a></li>
            `);
        }

        // Next button
        if (currentPage < totalPages) {
            container.append(`
                <li class="page-item">
                    <a class="page-link page-link-next" href="#" onclick="${callbackFn}(${currentPage + 1})" aria-label="Next">
                        Next<span aria-hidden="true"><i class="icon-long-arrow-right"></i></span>
                    </a>
                </li>
            `);
        } else {
            container.append(`
                <li class="page-item disabled">
                    <a class="page-link page-link-next" href="#" aria-label="Next" tabindex="-1" aria-disabled="true">
                        Next<span aria-hidden="true"><i class="icon-long-arrow-right"></i></span>
                    </a>
                </li>
            `);
        }
    }

    // Handle anchor links
    window.addEventListener('DOMContentLoaded', (event) => {
        if (window.location.hash) {
            var element = document.querySelector(window.location.hash);
            if (element) {
                element.scrollIntoView();
            }
        }
    });
</script>

<%- include('../layouts/users/footer', { path: '/profile' }) %>