<%- include('../layouts/admin/header', { title: 'Admin Panel', path: '/home'}) %>

<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Order List</h2>
            <p>Lorem ipsum dolor sit amet.</p>
        </div>
        <div>
            <input type="text" placeholder="Search order ID" class="form-control bg-white" />
        </div>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <div class="row gx-3">
                <div class="col-lg-4 col-md-6 me-auto">
                    <input type="text" placeholder="Search..." class="form-control" />
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                    <div class="custom-select">
                        <select id="filter" class="form-select">
                            <option value="all">All</option>
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                            <option value="custom">Custom</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2 col-6 start-date-container" style="display: none;">
                    <label for="startDate">Start Date</label>
                    <input type="date" id="startDate" name="startDate" class="form-control" />
                </div>
                <div class="col-md-2 col-6 end-date-container" style="display: none;">
                    <label for="endDate">End Date</label>
                    <input type="date" id="endDate" name="endDate" class="form-control" />
                </div>                    
                <div class="col-md-2 col-6">
                    <button type="submit" class="btn btn-primary" id="generateButton">
                        <i class="text-muted material-icons"></i>Generate
                    </button>
                </div>
            </div>
        </header>
        <!-- card-header end// -->
        <div class="card-body">
            <div class="table-responsive" id="downloadPdf">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th scope="col">Billing Name</th>
                            <th scope="col">Date</th>
                            <th scope="col">Offer Deduction</th>
                            <th scope="col">Coupon Deduction</th>
                            <th scope="col">Total</th>
                            <th scope="col">Payment Method</th>
                        </tr>
                    </thead>
                    <tbody id="productContainer">
                        <% orderData.forEach((order, indexes) => { %>
                            <% order.products.forEach((product, index) => { %>
                                <% if(product.status === 'Delivered') { %>
                                    <tr>
                                        <td><%= order._id.toString().toUpperCase().slice(-6) %></td>
                                        <td><b><%= order.user_name %></b></td>
                                        <td><%= new Date(order.date).toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' }) %></td>
                                        <td><%= order.offerDiscount %></td>
                                        <td><%= order.couponDiscount %></td>
                                        <td><%= order.total_amount.toFixed(2) %></td>
                                        <td><%= order.payment %></td>
                                    </tr>
                                <% } %> 
                            <% }) %>
                        <% }) %>
                        <tr>
                            <td colspan="5"></td>
                            <td>Total Order Count</td>
                            <td><%= count %></td>
                        </tr>
                        <tr>
                            <td colspan="5"></td>
                            <td>Total Offer Amount</td>
                            <td><%= offerTotal %></td>
                        </tr>
                        <tr>
                            <td colspan="5"></td>
                            <td>Total Coupon Amount</td>
                            <td><%= couponTotal %></td>
                        </tr>
                        <tr>
                            <td colspan="5"></td>
                            <td>Total Order Amount</td>
                            <td><%= grandTotal %></td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div>
                <a href="#" id="downloadPdfBtn" class="btn btn-primary" onclick="convertToPDF()">
                    <i class="text-muted material-icons md-post_add"></i>Download as Pdf
                </a>
                <a href="#" id="downloadExcelBtn" class="btn btn-primary" onclick="convertToExcel()">
                    <i class="text-muted material-icons md-post_add"></i>Download as Excel
                </a>
            </div>

            <div id="orderLists" class="pagination-area mt-30 mb-50">
                <nav aria-label="Page navigation example ">
                    <ul class="pagination justify-content-center">
                        <li class="page-item"><a class="page-link" href="?page"></a></li>
                        <li class="page-item">
                            <a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a>
                        </li>
                    </ul>
                </nav>
            </div>
            <!-- table-responsive //end -->
        </div>
        <!-- card-body end// -->
    </div>
    <!-- card end// -->
</section>
           
<script>
    document.querySelectorAll('.detail-btn').forEach(button => {
        button.addEventListener('click', event => {
            const orderId = event.target.dataset.orderId;
            window.location.href = `/admin/orderDetail/${orderId}`;
        });
    });
</script>
        
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

<!-- excel download -->
<script>
    function convertToExcel() {
        const table = document.getElementById('downloadPdf').querySelector('table');
        const wb = XLSX.utils.table_to_book(table);
        const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'binary' });
        const blob = new Blob([s2ab(wbout)], { type: 'application/octet-stream' });
        saveAs(blob, 'table_data.xlsx');
    }
    
    function s2ab(s) {
        const buf = new ArrayBuffer(s.length);
        const view = new Uint8Array(buf);
        for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
        return buf;
    }
</script>

<!-- pdf download -->
<script>
    function convertToPDF() {
        const element = document.getElementById('downloadPdf');
        setTimeout(() => {
            html2pdf()
                .from(element)
                .save();
        }, 1000);
    }
</script>

<!-- Filtering -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("filter").addEventListener("change", handleFilterChange);
        document.getElementById("generateButton").addEventListener("click", filterSalesReport);

        document.getElementById("endDate").value = new Date().toISOString().slice(0, 10);

        function handleFilterChange() {
            const filter = document.getElementById("filter").value;
            const startDateContainer = document.querySelector('.start-date-container');
            const endDateContainer = document.querySelector('.end-date-container');
            if (filter === "custom") {
                startDateContainer.style.display = 'block';
                endDateContainer.style.display = 'block';
            } else {
                startDateContainer.style.display = 'none';
                endDateContainer.style.display = 'none';
            }
        }

        function filterSalesReport() {
            const filter = document.getElementById("filter").value;
            const startDate = document.querySelector("[name='startDate']").value;
            const endDate = document.querySelector("[name='endDate']").value;

            let startDateValue = "";
            let endDateValue = "";
            const currentDate = new Date();

            if (filter === 'custom' && startDate && endDate) {
                startDateValue = startDate;
                endDateValue = endDate;
            } else {
                if (filter === 'daily') {
                    const yesterdayDate = new Date(currentDate);
                    yesterdayDate.setDate(yesterdayDate.getDate() - 1);
                    startDateValue = (yesterdayDate);
                    endDateValue = (currentDate);
                } else if (filter === 'weekly') {
                    const lastWeekDate = new Date(currentDate);
                    lastWeekDate.setDate(lastWeekDate.getDate() - 7);
                    startDateValue = (lastWeekDate);
                    endDateValue = (currentDate);
                } else if (filter === 'monthly') {
                    const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
                    const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
                    startDateValue = (firstDayOfMonth);
                    endDateValue = (lastDayOfMonth);
                } else if (filter === 'yearly') {
                    const firstDayOfYear = new Date(currentDate.getFullYear(), 0, 1);
                    const lastDayOfYear = new Date(currentDate.getFullYear(), 11, 31);
                    startDateValue = (firstDayOfYear);
                    endDateValue = (lastDayOfYear);
                }
            }

            const url = `/admin/filterSalesReport`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ filter, startDate: startDateValue, endDate: endDateValue })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                if (data.status === 'success') {
                    console.log('Filter used:', data.filter);

                    const productContainer = document.getElementById('productContainer')
                    let productHTML = '';
                    data.filter.forEach(order => {
                        productHTML += `
                            <tr>
                                <td>${order._id.toString().toUpperCase().slice(-6)}</td>
                                <td><b>${order.user_name}</b></td>
                                <td>${new Date(order.date).toLocaleDateString('en-US', { month: 'short', day: '2-digit', year: 'numeric' })}</td>
                                <td>${order.offerDiscount}</td>
                                <td>${order.couponDiscount}</td>
                                <td>${order.total_amount.toFixed(2)}</td>
                                <td>${order.payment}</td>
                            </tr>`;
                    });

                    productContainer.innerHTML = productHTML;
                }
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        }
    });
</script>    
 
<%- include('../layouts/admin/footer', { path: '/salesReport' }) %>